package prompt;

/**
 * Created by pontus on 2016-10-13.
 */

import org.junit.*;
import static org.junit.Assert.*;

public class FileManager_InputControlTest {

	Filemanager fm = new Filemanager();

	@Before
	public void filemanager(){
		fm = new Filemanager();
	}

	private String textFileNameLength(int length){
		String fileName = "";
		for(int a = 0; a < length - 4; a++){
			fileName += "a";
		}

		return fileName + ".txt";
	}

	@Test
	public void correctName_noSpaces(){
		assertEquals(true, fm.correctName("abcdef"));
	}

	@Test
	public void correctName_Spaces(){
		assertEquals(false, fm.correctName("abc def"));
	}

	@Test
	public void correctName_invalidCharSmaller(){
		assertEquals(false, fm.correctName("<abc"));
	}

	@Test
	public void correctName_invalidCharBigger(){
		assertEquals(false, fm.correctName(">abc"));
	}

	@Test
	public void correctName_invalidCharColon(){
		assertEquals(false, fm.correctName(":abc"));
	}

	@Test
	public void correctName_invalidCharQuote(){
		assertEquals(false, fm.correctName("abc\""));
	}

	@Test
	public void correctName_invalidCharSlash(){
		assertEquals(false, fm.correctName("/abc"));
	}

	@Test
	public void correctName_invalidCharBar(){
		assertEquals(false, fm.correctName("|abc"));
	}

	@Test
	public void correctName_invalidCharQuestion(){
		assertEquals(false, fm.correctName("?abc"));
	}

	@Test
	public void correctName_invalidCharAsterisk(){
		assertEquals(false, fm.correctName("*abc"));
	}

	@Test
	public void correctName_maxLength(){
		assertEquals(true, fm.correctName(textFileNameLength(255)));
	}

	@Test
	public void correctName_tooLong(){
		assertEquals(false, fm.correctName(textFileNameLength(256)));
	}

	@Test
	public void correctFileName_invalidCharBackslash(){
		assertEquals(false, fm.correctFileName("abc\\.txt"));
	}

	@Test
	public void correctFileName_wrongFileType(){
		assertEquals(false, fm.correctFileName("abc.jpg"));
	}

	@Test
	public void correctFileName_rightFileType(){
		assertEquals(true, fm.correctFileName("abc.txt"));
	}

	@Test
	public void correctDirectoryName_startsWithBackslash(){
		assertEquals(true, fm.correctDirectoryName("\\abcdef"));
	}

	@Test
	public void correctDirectoryName_doesNotStartsWithBackslash(){
		assertEquals(false, fm.correctDirectoryName("abcdef"));
	}
}